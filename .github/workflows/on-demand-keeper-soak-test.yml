name: On Demand Keeper Soak Test
on:
  workflow_dispatch:
    inputs:
      network:
        description: Network to run tests on
        type: choice
        options:
          - "SIMULATED"
          - "GOERLI"
          - "OPTIMISM_GOERLI"
          - "ARBITRUM_GOERLI"
      fundingPrivateKey:
        description: Private funding key (Skip for Simulated)
        required: false
        type: string
      wsURL:
        description: WS URL for the network (Skip for Simulated)
        required: false
        type: string
      httpURL:
        description: HTTP URL for the network (Skip for Simulated)
        required: false
        type: string
      slackMemberID:
        description: Notifies test results (Not your @)
        required: true
        default: U01A2B2C3D4
        type: string
      chainlinkImage:
        description: Container image location for the Chainlink nodes
        required: true
        default: public.ecr.aws/chainlink/chainlink
      chainlinkVersion:
        description: Container image version for the Chainlink nodes
        required: true
        default: "1.10.0"
      numberContracts:
        description: Number of upkeep contracts to deploy
        required: false
        default: 15m
      testTimeout:
        description: How long before killing the test
        required: false
        default: 30m
      blockRange:
        description: How many blocks the test should last
        required: false
        default: "1000"
      blockInterval:
        description: How many blocks between making upkeeps eligible
        required: false
        default: "50"
      checkGasToBurn:
        description: How much wei to burn in CheckUpkeep
        required: false
        default: "1"
      performGasToBurn:
        description: How much we it burn in PerformUpkeep
        required: false
        default: "1"
      chainlinkNodeFunding:
        description: How much to fund each Chainlink node (in ETH)
        required: false
        default: ".001"

jobs:
  keeper_soak_test:
    environment: integration
    runs-on: ubuntu-latest
    env:
      SELECTED_NETWORKS: ${{ inputs.network }}
      EVM_KEYS: ${{ inputs.fundingPrivateKey }}
      EVM_URLS: ${{ inputs.wsURL }}
      EVM_HTTP_URLS: ${{ inputs.httpURL }}
      SLACK_USER: ${{ inputs.slackMemberID }}
      SLACK_API_KEY: ${{ secrets.QA_SLACK_API_KEY }}
      SLACK_CHANNEL: ${{ secrets.QA_SLACK_CHANNEL }}
      KEEPER_NUMBER_OF_CONTRACTS: ${{ inputs.numberContracts }}
      KEEPER_TEST_TIMEOUT: ${{ inputs.testTimeout }}
      KEEPER_BLOCK_RANGE: ${{ inputs.blockRange }}
      KEEPER_BLOCK_INTERVAL: ${{ inputs.blockInterval }}
      KEEPER_CHECK_GAS_TO_BURN: ${{ inputs.checkGasToBurn }}
      KEEPER_PERFORM_GAS_TO_BURN: ${{ inputs.performGasToBurn }}
      KEEPER_CHAINLINK_NODE_FUNDING: ${{ inputs.chainlinkNodeFunding }}
    steps:
      - name: Collect Metrics
        id: collect-gha-metrics
        uses: smartcontractkit/push-gha-metrics-action@v1
        with:
          basic-auth: ${{ secrets.GRAFANA_CLOUD_BASIC_AUTH }}
          hostname: ${{ secrets.GRAFANA_CLOUD_HOST }}
          this-job-name: ${{ matrix.network }} Smoke Tests
        continue-on-error: true
      - name: Checkout the repo
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Run Tests
        if: needs.changes.outputs.src == 'true'
        uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/run-tests@1533bff48f8a642089705dcc2dbebb0934ff7d9d # v2.0.26
        with:
          test_command_to_run: make test_soak_keeper
          test_download_vendor_packages_command: make gomod
          test_download_ginkgo_command: make test_install_ginkgo
          cl_repo: ${{ inputs.chainlinkImage }}
          cl_image_tag: ${{ inputs.chainlinkVersion }}
          triggered_by: ${{ env.TEST_TRIGGERED_BY }}
          go_mod_path: ./integration-tests/go.mod
          QA_AWS_REGION: ${{ secrets.QA_AWS_REGION }}
          QA_AWS_ROLE_TO_ASSUME: ${{ secrets.QA_AWS_ROLE_TO_ASSUME }}
          QA_KUBECONFIG: ${{ secrets.QA_KUBECONFIG }}
