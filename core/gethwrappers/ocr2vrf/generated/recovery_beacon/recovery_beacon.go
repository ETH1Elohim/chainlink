// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package recovery_beacon

import (
	"errors"
	"fmt"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
	"github.com/smartcontractkit/chainlink/core/gethwrappers/generated"
)

var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

type KeyDataStructKeyData struct {
	PublicKey []byte
	Hashes    [][32]byte
}

type RecoveryBeaconReportReport struct {
	AccountToRecover common.Address
	Recoverer        common.Address
	Success          bool
}

type RecoveryBeaconTypesEnrollmentRequest struct {
	AddressToEnroll common.Address
	PublicKeyBytes  []byte
}

type RecoveryBeaconTypesEnrollmentResponse struct {
	PlayerIdx                uint8
	Threshold                uint8
	Cipher                   []byte
	EphermeralKeyPubKeyBytes []byte
	Nonce                    []byte
	DistributedPublicKey     []byte
	AccountPointBytes        []byte
	RecoveryPubKeyBytes      []byte
}

type RecoveryBeaconTypesLease struct {
	Recoverer        common.Address
	AccountToRecover common.Address
	AttemptsLeft     uint8
	BlockPurchased   *big.Int
}

type RecoveryBeaconTypesRecoveryRequest struct {
	PlayerIdx                uint8
	Nonce                    []byte
	DistributedPublicKey     []byte
	Cipher                   []byte
	EphermeralKeyPubKeyBytes []byte
	RecoveryPubKeyBytes      []byte
	Recoverer                common.Address
	AddressToRecover         common.Address
}

var RecoveryBeaconMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"contractDKG\",\"name\":\"keyProvider\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"keyID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"keyProvider\",\"type\":\"address\"}],\"name\":\"KeyInfoMustComeFromProvider\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"config\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"expectedLength\",\"type\":\"uint256\"}],\"name\":\"OffchainConfigHasWrongLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"occVersion\",\"type\":\"uint64\"}],\"name\":\"UnknownConfigVersion\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"previousConfigBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"configCount\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint40\",\"name\":\"epochAndRound\",\"type\":\"uint40\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"}],\"name\":\"NewTransmission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"structRecoveryBeaconReport.Report\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"exposeType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getEnrollmentResponses\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"playerIdx\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"cipher\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ephermeralKeyPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"nonce\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"distributedPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"accountPointBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"recoveryPubKeyBytes\",\"type\":\"bytes\"}],\"internalType\":\"structRecoveryBeaconTypes.EnrollmentResponse[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"}],\"name\":\"getLease\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"attemptsLeft\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockPurchased\",\"type\":\"uint256\"}],\"internalType\":\"structRecoveryBeaconTypes.Lease\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMostRecentEnrollmentRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addressToEnroll\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"publicKeyBytes\",\"type\":\"bytes\"}],\"internalType\":\"structRecoveryBeaconTypes.EnrollmentRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getRecovery\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecoveryRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"playerIdx\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"nonce\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"distributedPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cipher\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ephermeralKeyPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"recoveryPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addressToRecover\",\"type\":\"address\"}],\"internalType\":\"structRecoveryBeaconTypes.RecoveryRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"internalType\":\"structKeyDataStruct.KeyData\",\"name\":\"kd\",\"type\":\"tuple\"}],\"name\":\"keyGenerated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDetails\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"configCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestConfigDigestAndEpoch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"scanLogs\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"configDigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"}],\"name\":\"leaseIsExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newKeyRequested\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"plunderLease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"playerIdx\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"cipher\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ephermeralKeyPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"nonce\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"distributedPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"accountPointBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"recoveryPubKeyBytes\",\"type\":\"bytes\"}],\"internalType\":\"structRecoveryBeaconTypes.EnrollmentResponse\",\"name\":\"enrollmentResponse\",\"type\":\"tuple\"}],\"name\":\"postCipher\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"playerIdx\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"nonce\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"distributedPublicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"cipher\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"ephermeralKeyPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"recoveryPubKeyBytes\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recoverer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addressToRecover\",\"type\":\"address\"}],\"internalType\":\"structRecoveryBeaconTypes.RecoveryRequest[]\",\"name\":\"recoveryRequests\",\"type\":\"tuple[]\"}],\"name\":\"postRecoveryRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKeyBytes\",\"type\":\"bytes\"}],\"name\":\"requestAccountRecoveryEnrollment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accountToRecover\",\"type\":\"address\"}],\"name\":\"requestRecoveryLease\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_keyID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_mostRecentAccountToRecover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_provingKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"transmitters\",\"type\":\"address[]\"},{\"internalType\":\"uint8\",\"name\":\"f\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"onchainConfig\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offchainConfigVersion\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"offchainConfig\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"answer\",\"type\":\"bytes\"}],\"name\":\"setRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"reportContext\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"report\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"rs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"ss\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"rawVs\",\"type\":\"bytes32\"}],\"name\":\"transmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}]",
	Bin: "",
}

var RecoveryBeaconABI = RecoveryBeaconMetaData.ABI

var RecoveryBeaconBin = RecoveryBeaconMetaData.Bin

func DeployRecoveryBeacon(auth *bind.TransactOpts, backend bind.ContractBackend, keyProvider common.Address, keyID [32]byte) (common.Address, *types.Transaction, *RecoveryBeacon, error) {
	parsed, err := RecoveryBeaconMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RecoveryBeaconBin), backend, keyProvider, keyID)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RecoveryBeacon{RecoveryBeaconCaller: RecoveryBeaconCaller{contract: contract}, RecoveryBeaconTransactor: RecoveryBeaconTransactor{contract: contract}, RecoveryBeaconFilterer: RecoveryBeaconFilterer{contract: contract}}, nil
}

type RecoveryBeacon struct {
	address common.Address
	abi     abi.ABI
	RecoveryBeaconCaller
	RecoveryBeaconTransactor
	RecoveryBeaconFilterer
}

type RecoveryBeaconCaller struct {
	contract *bind.BoundContract
}

type RecoveryBeaconTransactor struct {
	contract *bind.BoundContract
}

type RecoveryBeaconFilterer struct {
	contract *bind.BoundContract
}

type RecoveryBeaconSession struct {
	Contract     *RecoveryBeacon
	CallOpts     bind.CallOpts
	TransactOpts bind.TransactOpts
}

type RecoveryBeaconCallerSession struct {
	Contract *RecoveryBeaconCaller
	CallOpts bind.CallOpts
}

type RecoveryBeaconTransactorSession struct {
	Contract     *RecoveryBeaconTransactor
	TransactOpts bind.TransactOpts
}

type RecoveryBeaconRaw struct {
	Contract *RecoveryBeacon
}

type RecoveryBeaconCallerRaw struct {
	Contract *RecoveryBeaconCaller
}

type RecoveryBeaconTransactorRaw struct {
	Contract *RecoveryBeaconTransactor
}

func NewRecoveryBeacon(address common.Address, backend bind.ContractBackend) (*RecoveryBeacon, error) {
	abi, err := abi.JSON(strings.NewReader(RecoveryBeaconABI))
	if err != nil {
		return nil, err
	}
	contract, err := bindRecoveryBeacon(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeacon{address: address, abi: abi, RecoveryBeaconCaller: RecoveryBeaconCaller{contract: contract}, RecoveryBeaconTransactor: RecoveryBeaconTransactor{contract: contract}, RecoveryBeaconFilterer: RecoveryBeaconFilterer{contract: contract}}, nil
}

func NewRecoveryBeaconCaller(address common.Address, caller bind.ContractCaller) (*RecoveryBeaconCaller, error) {
	contract, err := bindRecoveryBeacon(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconCaller{contract: contract}, nil
}

func NewRecoveryBeaconTransactor(address common.Address, transactor bind.ContractTransactor) (*RecoveryBeaconTransactor, error) {
	contract, err := bindRecoveryBeacon(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconTransactor{contract: contract}, nil
}

func NewRecoveryBeaconFilterer(address common.Address, filterer bind.ContractFilterer) (*RecoveryBeaconFilterer, error) {
	contract, err := bindRecoveryBeacon(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconFilterer{contract: contract}, nil
}

func bindRecoveryBeacon(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RecoveryBeaconABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

func (_RecoveryBeacon *RecoveryBeaconRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RecoveryBeacon.Contract.RecoveryBeaconCaller.contract.Call(opts, result, method, params...)
}

func (_RecoveryBeacon *RecoveryBeaconRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RecoveryBeaconTransactor.contract.Transfer(opts)
}

func (_RecoveryBeacon *RecoveryBeaconRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RecoveryBeaconTransactor.contract.Transact(opts, method, params...)
}

func (_RecoveryBeacon *RecoveryBeaconCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RecoveryBeacon.Contract.contract.Call(opts, result, method, params...)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.contract.Transfer(opts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.contract.Transact(opts, method, params...)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetBalance(opts *bind.CallOpts, addr common.Address) (*big.Int, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getBalance", addr)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetBalance(addr common.Address) (*big.Int, error) {
	return _RecoveryBeacon.Contract.GetBalance(&_RecoveryBeacon.CallOpts, addr)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetBalance(addr common.Address) (*big.Int, error) {
	return _RecoveryBeacon.Contract.GetBalance(&_RecoveryBeacon.CallOpts, addr)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetEnrollmentResponses(opts *bind.CallOpts, user common.Address) ([]RecoveryBeaconTypesEnrollmentResponse, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getEnrollmentResponses", user)

	if err != nil {
		return *new([]RecoveryBeaconTypesEnrollmentResponse), err
	}

	out0 := *abi.ConvertType(out[0], new([]RecoveryBeaconTypesEnrollmentResponse)).(*[]RecoveryBeaconTypesEnrollmentResponse)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetEnrollmentResponses(user common.Address) ([]RecoveryBeaconTypesEnrollmentResponse, error) {
	return _RecoveryBeacon.Contract.GetEnrollmentResponses(&_RecoveryBeacon.CallOpts, user)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetEnrollmentResponses(user common.Address) ([]RecoveryBeaconTypesEnrollmentResponse, error) {
	return _RecoveryBeacon.Contract.GetEnrollmentResponses(&_RecoveryBeacon.CallOpts, user)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetLease(opts *bind.CallOpts, accountToRecover common.Address) (RecoveryBeaconTypesLease, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getLease", accountToRecover)

	if err != nil {
		return *new(RecoveryBeaconTypesLease), err
	}

	out0 := *abi.ConvertType(out[0], new(RecoveryBeaconTypesLease)).(*RecoveryBeaconTypesLease)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetLease(accountToRecover common.Address) (RecoveryBeaconTypesLease, error) {
	return _RecoveryBeacon.Contract.GetLease(&_RecoveryBeacon.CallOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetLease(accountToRecover common.Address) (RecoveryBeaconTypesLease, error) {
	return _RecoveryBeacon.Contract.GetLease(&_RecoveryBeacon.CallOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetMostRecentEnrollmentRequest(opts *bind.CallOpts) (RecoveryBeaconTypesEnrollmentRequest, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getMostRecentEnrollmentRequest")

	if err != nil {
		return *new(RecoveryBeaconTypesEnrollmentRequest), err
	}

	out0 := *abi.ConvertType(out[0], new(RecoveryBeaconTypesEnrollmentRequest)).(*RecoveryBeaconTypesEnrollmentRequest)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetMostRecentEnrollmentRequest() (RecoveryBeaconTypesEnrollmentRequest, error) {
	return _RecoveryBeacon.Contract.GetMostRecentEnrollmentRequest(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetMostRecentEnrollmentRequest() (RecoveryBeaconTypesEnrollmentRequest, error) {
	return _RecoveryBeacon.Contract.GetMostRecentEnrollmentRequest(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetRecoveredAddress(opts *bind.CallOpts, recoverer common.Address) (common.Address, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getRecoveredAddress", recoverer)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetRecoveredAddress(recoverer common.Address) (common.Address, error) {
	return _RecoveryBeacon.Contract.GetRecoveredAddress(&_RecoveryBeacon.CallOpts, recoverer)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetRecoveredAddress(recoverer common.Address) (common.Address, error) {
	return _RecoveryBeacon.Contract.GetRecoveredAddress(&_RecoveryBeacon.CallOpts, recoverer)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetRecovery(opts *bind.CallOpts, user common.Address) ([]byte, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getRecovery", user)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetRecovery(user common.Address) ([]byte, error) {
	return _RecoveryBeacon.Contract.GetRecovery(&_RecoveryBeacon.CallOpts, user)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetRecovery(user common.Address) ([]byte, error) {
	return _RecoveryBeacon.Contract.GetRecovery(&_RecoveryBeacon.CallOpts, user)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) GetRecoveryRequests(opts *bind.CallOpts) ([]RecoveryBeaconTypesRecoveryRequest, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "getRecoveryRequests")

	if err != nil {
		return *new([]RecoveryBeaconTypesRecoveryRequest), err
	}

	out0 := *abi.ConvertType(out[0], new([]RecoveryBeaconTypesRecoveryRequest)).(*[]RecoveryBeaconTypesRecoveryRequest)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) GetRecoveryRequests() ([]RecoveryBeaconTypesRecoveryRequest, error) {
	return _RecoveryBeacon.Contract.GetRecoveryRequests(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) GetRecoveryRequests() ([]RecoveryBeaconTypesRecoveryRequest, error) {
	return _RecoveryBeacon.Contract.GetRecoveryRequests(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) LatestConfigDetails(opts *bind.CallOpts) (LatestConfigDetails,

	error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "latestConfigDetails")

	outstruct := new(LatestConfigDetails)
	if err != nil {
		return *outstruct, err
	}

	outstruct.ConfigCount = *abi.ConvertType(out[0], new(uint32)).(*uint32)
	outstruct.BlockNumber = *abi.ConvertType(out[1], new(uint32)).(*uint32)
	outstruct.ConfigDigest = *abi.ConvertType(out[2], new([32]byte)).(*[32]byte)

	return *outstruct, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) LatestConfigDetails() (LatestConfigDetails,

	error) {
	return _RecoveryBeacon.Contract.LatestConfigDetails(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) LatestConfigDetails() (LatestConfigDetails,

	error) {
	return _RecoveryBeacon.Contract.LatestConfigDetails(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) LatestConfigDigestAndEpoch(opts *bind.CallOpts) (LatestConfigDigestAndEpoch,

	error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "latestConfigDigestAndEpoch")

	outstruct := new(LatestConfigDigestAndEpoch)
	if err != nil {
		return *outstruct, err
	}

	outstruct.ScanLogs = *abi.ConvertType(out[0], new(bool)).(*bool)
	outstruct.ConfigDigest = *abi.ConvertType(out[1], new([32]byte)).(*[32]byte)
	outstruct.Epoch = *abi.ConvertType(out[2], new(uint32)).(*uint32)

	return *outstruct, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) LatestConfigDigestAndEpoch() (LatestConfigDigestAndEpoch,

	error) {
	return _RecoveryBeacon.Contract.LatestConfigDigestAndEpoch(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) LatestConfigDigestAndEpoch() (LatestConfigDigestAndEpoch,

	error) {
	return _RecoveryBeacon.Contract.LatestConfigDigestAndEpoch(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) LeaseIsExpired(opts *bind.CallOpts, accountToRecover common.Address) (bool, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "leaseIsExpired", accountToRecover)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) LeaseIsExpired(accountToRecover common.Address) (bool, error) {
	return _RecoveryBeacon.Contract.LeaseIsExpired(&_RecoveryBeacon.CallOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) LeaseIsExpired(accountToRecover common.Address) (bool, error) {
	return _RecoveryBeacon.Contract.LeaseIsExpired(&_RecoveryBeacon.CallOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) Owner() (common.Address, error) {
	return _RecoveryBeacon.Contract.Owner(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) Owner() (common.Address, error) {
	return _RecoveryBeacon.Contract.Owner(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) SKeyID(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "s_keyID")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) SKeyID() ([32]byte, error) {
	return _RecoveryBeacon.Contract.SKeyID(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) SKeyID() ([32]byte, error) {
	return _RecoveryBeacon.Contract.SKeyID(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) SMostRecentAccountToRecover(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "s_mostRecentAccountToRecover")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) SMostRecentAccountToRecover() (common.Address, error) {
	return _RecoveryBeacon.Contract.SMostRecentAccountToRecover(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) SMostRecentAccountToRecover() (common.Address, error) {
	return _RecoveryBeacon.Contract.SMostRecentAccountToRecover(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) SProvingKeyHash(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "s_provingKeyHash")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) SProvingKeyHash() ([32]byte, error) {
	return _RecoveryBeacon.Contract.SProvingKeyHash(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) SProvingKeyHash() ([32]byte, error) {
	return _RecoveryBeacon.Contract.SProvingKeyHash(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCaller) TypeAndVersion(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _RecoveryBeacon.contract.Call(opts, &out, "typeAndVersion")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

func (_RecoveryBeacon *RecoveryBeaconSession) TypeAndVersion() (string, error) {
	return _RecoveryBeacon.Contract.TypeAndVersion(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconCallerSession) TypeAndVersion() (string, error) {
	return _RecoveryBeacon.Contract.TypeAndVersion(&_RecoveryBeacon.CallOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "acceptOwnership")
}

func (_RecoveryBeacon *RecoveryBeaconSession) AcceptOwnership() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.AcceptOwnership(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) AcceptOwnership() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.AcceptOwnership(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) Deposit(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "deposit")
}

func (_RecoveryBeacon *RecoveryBeaconSession) Deposit() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Deposit(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) Deposit() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Deposit(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) ExposeType(opts *bind.TransactOpts, arg0 RecoveryBeaconReportReport) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "exposeType", arg0)
}

func (_RecoveryBeacon *RecoveryBeaconSession) ExposeType(arg0 RecoveryBeaconReportReport) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.ExposeType(&_RecoveryBeacon.TransactOpts, arg0)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) ExposeType(arg0 RecoveryBeaconReportReport) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.ExposeType(&_RecoveryBeacon.TransactOpts, arg0)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) KeyGenerated(opts *bind.TransactOpts, kd KeyDataStructKeyData) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "keyGenerated", kd)
}

func (_RecoveryBeacon *RecoveryBeaconSession) KeyGenerated(kd KeyDataStructKeyData) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.KeyGenerated(&_RecoveryBeacon.TransactOpts, kd)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) KeyGenerated(kd KeyDataStructKeyData) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.KeyGenerated(&_RecoveryBeacon.TransactOpts, kd)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) NewKeyRequested(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "newKeyRequested")
}

func (_RecoveryBeacon *RecoveryBeaconSession) NewKeyRequested() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.NewKeyRequested(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) NewKeyRequested() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.NewKeyRequested(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) PlunderLease(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "plunderLease")
}

func (_RecoveryBeacon *RecoveryBeaconSession) PlunderLease() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PlunderLease(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) PlunderLease() (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PlunderLease(&_RecoveryBeacon.TransactOpts)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) PostCipher(opts *bind.TransactOpts, user common.Address, enrollmentResponse RecoveryBeaconTypesEnrollmentResponse) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "postCipher", user, enrollmentResponse)
}

func (_RecoveryBeacon *RecoveryBeaconSession) PostCipher(user common.Address, enrollmentResponse RecoveryBeaconTypesEnrollmentResponse) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PostCipher(&_RecoveryBeacon.TransactOpts, user, enrollmentResponse)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) PostCipher(user common.Address, enrollmentResponse RecoveryBeaconTypesEnrollmentResponse) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PostCipher(&_RecoveryBeacon.TransactOpts, user, enrollmentResponse)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) PostRecoveryRequests(opts *bind.TransactOpts, recoveryRequests []RecoveryBeaconTypesRecoveryRequest) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "postRecoveryRequests", recoveryRequests)
}

func (_RecoveryBeacon *RecoveryBeaconSession) PostRecoveryRequests(recoveryRequests []RecoveryBeaconTypesRecoveryRequest) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PostRecoveryRequests(&_RecoveryBeacon.TransactOpts, recoveryRequests)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) PostRecoveryRequests(recoveryRequests []RecoveryBeaconTypesRecoveryRequest) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.PostRecoveryRequests(&_RecoveryBeacon.TransactOpts, recoveryRequests)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) RequestAccountRecoveryEnrollment(opts *bind.TransactOpts, publicKeyBytes []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "requestAccountRecoveryEnrollment", publicKeyBytes)
}

func (_RecoveryBeacon *RecoveryBeaconSession) RequestAccountRecoveryEnrollment(publicKeyBytes []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RequestAccountRecoveryEnrollment(&_RecoveryBeacon.TransactOpts, publicKeyBytes)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) RequestAccountRecoveryEnrollment(publicKeyBytes []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RequestAccountRecoveryEnrollment(&_RecoveryBeacon.TransactOpts, publicKeyBytes)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) RequestRecoveryLease(opts *bind.TransactOpts, accountToRecover common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "requestRecoveryLease", accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconSession) RequestRecoveryLease(accountToRecover common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RequestRecoveryLease(&_RecoveryBeacon.TransactOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) RequestRecoveryLease(accountToRecover common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.RequestRecoveryLease(&_RecoveryBeacon.TransactOpts, accountToRecover)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) Reset(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "reset", addr)
}

func (_RecoveryBeacon *RecoveryBeaconSession) Reset(addr common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Reset(&_RecoveryBeacon.TransactOpts, addr)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) Reset(addr common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Reset(&_RecoveryBeacon.TransactOpts, addr)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) SetConfig(opts *bind.TransactOpts, signers []common.Address, transmitters []common.Address, f uint8, onchainConfig []byte, offchainConfigVersion uint64, offchainConfig []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "setConfig", signers, transmitters, f, onchainConfig, offchainConfigVersion, offchainConfig)
}

func (_RecoveryBeacon *RecoveryBeaconSession) SetConfig(signers []common.Address, transmitters []common.Address, f uint8, onchainConfig []byte, offchainConfigVersion uint64, offchainConfig []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.SetConfig(&_RecoveryBeacon.TransactOpts, signers, transmitters, f, onchainConfig, offchainConfigVersion, offchainConfig)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) SetConfig(signers []common.Address, transmitters []common.Address, f uint8, onchainConfig []byte, offchainConfigVersion uint64, offchainConfig []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.SetConfig(&_RecoveryBeacon.TransactOpts, signers, transmitters, f, onchainConfig, offchainConfigVersion, offchainConfig)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) SetRecovery(opts *bind.TransactOpts, answer []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "setRecovery", answer)
}

func (_RecoveryBeacon *RecoveryBeaconSession) SetRecovery(answer []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.SetRecovery(&_RecoveryBeacon.TransactOpts, answer)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) SetRecovery(answer []byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.SetRecovery(&_RecoveryBeacon.TransactOpts, answer)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) TransferOwnership(opts *bind.TransactOpts, to common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "transferOwnership", to)
}

func (_RecoveryBeacon *RecoveryBeaconSession) TransferOwnership(to common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.TransferOwnership(&_RecoveryBeacon.TransactOpts, to)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) TransferOwnership(to common.Address) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.TransferOwnership(&_RecoveryBeacon.TransactOpts, to)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) Transmit(opts *bind.TransactOpts, reportContext [3][32]byte, report []byte, rs [][32]byte, ss [][32]byte, rawVs [32]byte) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "transmit", reportContext, report, rs, ss, rawVs)
}

func (_RecoveryBeacon *RecoveryBeaconSession) Transmit(reportContext [3][32]byte, report []byte, rs [][32]byte, ss [][32]byte, rawVs [32]byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Transmit(&_RecoveryBeacon.TransactOpts, reportContext, report, rs, ss, rawVs)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) Transmit(reportContext [3][32]byte, report []byte, rs [][32]byte, ss [][32]byte, rawVs [32]byte) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Transmit(&_RecoveryBeacon.TransactOpts, reportContext, report, rs, ss, rawVs)
}

func (_RecoveryBeacon *RecoveryBeaconTransactor) Withdraw(opts *bind.TransactOpts, addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _RecoveryBeacon.contract.Transact(opts, "withdraw", addr, amount)
}

func (_RecoveryBeacon *RecoveryBeaconSession) Withdraw(addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Withdraw(&_RecoveryBeacon.TransactOpts, addr, amount)
}

func (_RecoveryBeacon *RecoveryBeaconTransactorSession) Withdraw(addr common.Address, amount *big.Int) (*types.Transaction, error) {
	return _RecoveryBeacon.Contract.Withdraw(&_RecoveryBeacon.TransactOpts, addr, amount)
}

type RecoveryBeaconConfigSetIterator struct {
	Event *RecoveryBeaconConfigSet

	contract *bind.BoundContract
	event    string

	logs chan types.Log
	sub  ethereum.Subscription
	done bool
	fail error
}

func (it *RecoveryBeaconConfigSetIterator) Next() bool {

	if it.fail != nil {
		return false
	}

	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RecoveryBeaconConfigSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}

	select {
	case log := <-it.logs:
		it.Event = new(RecoveryBeaconConfigSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

func (it *RecoveryBeaconConfigSetIterator) Error() error {
	return it.fail
}

func (it *RecoveryBeaconConfigSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

type RecoveryBeaconConfigSet struct {
	PreviousConfigBlockNumber uint32
	ConfigDigest              [32]byte
	ConfigCount               uint64
	Signers                   []common.Address
	Transmitters              []common.Address
	F                         uint8
	OnchainConfig             []byte
	OffchainConfigVersion     uint64
	OffchainConfig            []byte
	Raw                       types.Log
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) FilterConfigSet(opts *bind.FilterOpts) (*RecoveryBeaconConfigSetIterator, error) {

	logs, sub, err := _RecoveryBeacon.contract.FilterLogs(opts, "ConfigSet")
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconConfigSetIterator{contract: _RecoveryBeacon.contract, event: "ConfigSet", logs: logs, sub: sub}, nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) WatchConfigSet(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconConfigSet) (event.Subscription, error) {

	logs, sub, err := _RecoveryBeacon.contract.WatchLogs(opts, "ConfigSet")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:

				event := new(RecoveryBeaconConfigSet)
				if err := _RecoveryBeacon.contract.UnpackLog(event, "ConfigSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) ParseConfigSet(log types.Log) (*RecoveryBeaconConfigSet, error) {
	event := new(RecoveryBeaconConfigSet)
	if err := _RecoveryBeacon.contract.UnpackLog(event, "ConfigSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

type RecoveryBeaconNewTransmissionIterator struct {
	Event *RecoveryBeaconNewTransmission

	contract *bind.BoundContract
	event    string

	logs chan types.Log
	sub  ethereum.Subscription
	done bool
	fail error
}

func (it *RecoveryBeaconNewTransmissionIterator) Next() bool {

	if it.fail != nil {
		return false
	}

	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RecoveryBeaconNewTransmission)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}

	select {
	case log := <-it.logs:
		it.Event = new(RecoveryBeaconNewTransmission)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

func (it *RecoveryBeaconNewTransmissionIterator) Error() error {
	return it.fail
}

func (it *RecoveryBeaconNewTransmissionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

type RecoveryBeaconNewTransmission struct {
	EpochAndRound    *big.Int
	Transmitter      common.Address
	AccountToRecover common.Address
	Recoverer        common.Address
	ConfigDigest     [32]byte
	Raw              types.Log
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) FilterNewTransmission(opts *bind.FilterOpts, epochAndRound []*big.Int) (*RecoveryBeaconNewTransmissionIterator, error) {

	var epochAndRoundRule []interface{}
	for _, epochAndRoundItem := range epochAndRound {
		epochAndRoundRule = append(epochAndRoundRule, epochAndRoundItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.FilterLogs(opts, "NewTransmission", epochAndRoundRule)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconNewTransmissionIterator{contract: _RecoveryBeacon.contract, event: "NewTransmission", logs: logs, sub: sub}, nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) WatchNewTransmission(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconNewTransmission, epochAndRound []*big.Int) (event.Subscription, error) {

	var epochAndRoundRule []interface{}
	for _, epochAndRoundItem := range epochAndRound {
		epochAndRoundRule = append(epochAndRoundRule, epochAndRoundItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.WatchLogs(opts, "NewTransmission", epochAndRoundRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:

				event := new(RecoveryBeaconNewTransmission)
				if err := _RecoveryBeacon.contract.UnpackLog(event, "NewTransmission", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) ParseNewTransmission(log types.Log) (*RecoveryBeaconNewTransmission, error) {
	event := new(RecoveryBeaconNewTransmission)
	if err := _RecoveryBeacon.contract.UnpackLog(event, "NewTransmission", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

type RecoveryBeaconOwnershipTransferRequestedIterator struct {
	Event *RecoveryBeaconOwnershipTransferRequested

	contract *bind.BoundContract
	event    string

	logs chan types.Log
	sub  ethereum.Subscription
	done bool
	fail error
}

func (it *RecoveryBeaconOwnershipTransferRequestedIterator) Next() bool {

	if it.fail != nil {
		return false
	}

	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RecoveryBeaconOwnershipTransferRequested)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}

	select {
	case log := <-it.logs:
		it.Event = new(RecoveryBeaconOwnershipTransferRequested)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

func (it *RecoveryBeaconOwnershipTransferRequestedIterator) Error() error {
	return it.fail
}

func (it *RecoveryBeaconOwnershipTransferRequestedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

type RecoveryBeaconOwnershipTransferRequested struct {
	From common.Address
	To   common.Address
	Raw  types.Log
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) FilterOwnershipTransferRequested(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*RecoveryBeaconOwnershipTransferRequestedIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.FilterLogs(opts, "OwnershipTransferRequested", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconOwnershipTransferRequestedIterator{contract: _RecoveryBeacon.contract, event: "OwnershipTransferRequested", logs: logs, sub: sub}, nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) WatchOwnershipTransferRequested(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconOwnershipTransferRequested, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.WatchLogs(opts, "OwnershipTransferRequested", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:

				event := new(RecoveryBeaconOwnershipTransferRequested)
				if err := _RecoveryBeacon.contract.UnpackLog(event, "OwnershipTransferRequested", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) ParseOwnershipTransferRequested(log types.Log) (*RecoveryBeaconOwnershipTransferRequested, error) {
	event := new(RecoveryBeaconOwnershipTransferRequested)
	if err := _RecoveryBeacon.contract.UnpackLog(event, "OwnershipTransferRequested", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

type RecoveryBeaconOwnershipTransferredIterator struct {
	Event *RecoveryBeaconOwnershipTransferred

	contract *bind.BoundContract
	event    string

	logs chan types.Log
	sub  ethereum.Subscription
	done bool
	fail error
}

func (it *RecoveryBeaconOwnershipTransferredIterator) Next() bool {

	if it.fail != nil {
		return false
	}

	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RecoveryBeaconOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}

	select {
	case log := <-it.logs:
		it.Event = new(RecoveryBeaconOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

func (it *RecoveryBeaconOwnershipTransferredIterator) Error() error {
	return it.fail
}

func (it *RecoveryBeaconOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

type RecoveryBeaconOwnershipTransferred struct {
	From common.Address
	To   common.Address
	Raw  types.Log
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*RecoveryBeaconOwnershipTransferredIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.FilterLogs(opts, "OwnershipTransferred", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return &RecoveryBeaconOwnershipTransferredIterator{contract: _RecoveryBeacon.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconOwnershipTransferred, from []common.Address, to []common.Address) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}

	logs, sub, err := _RecoveryBeacon.contract.WatchLogs(opts, "OwnershipTransferred", fromRule, toRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:

				event := new(RecoveryBeaconOwnershipTransferred)
				if err := _RecoveryBeacon.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

func (_RecoveryBeacon *RecoveryBeaconFilterer) ParseOwnershipTransferred(log types.Log) (*RecoveryBeaconOwnershipTransferred, error) {
	event := new(RecoveryBeaconOwnershipTransferred)
	if err := _RecoveryBeacon.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

type LatestConfigDetails struct {
	ConfigCount  uint32
	BlockNumber  uint32
	ConfigDigest [32]byte
}
type LatestConfigDigestAndEpoch struct {
	ScanLogs     bool
	ConfigDigest [32]byte
	Epoch        uint32
}

func (_RecoveryBeacon *RecoveryBeacon) ParseLog(log types.Log) (generated.AbigenLog, error) {
	switch log.Topics[0] {
	case _RecoveryBeacon.abi.Events["ConfigSet"].ID:
		return _RecoveryBeacon.ParseConfigSet(log)
	case _RecoveryBeacon.abi.Events["NewTransmission"].ID:
		return _RecoveryBeacon.ParseNewTransmission(log)
	case _RecoveryBeacon.abi.Events["OwnershipTransferRequested"].ID:
		return _RecoveryBeacon.ParseOwnershipTransferRequested(log)
	case _RecoveryBeacon.abi.Events["OwnershipTransferred"].ID:
		return _RecoveryBeacon.ParseOwnershipTransferred(log)

	default:
		return nil, fmt.Errorf("abigen wrapper received unknown log topic: %v", log.Topics[0])
	}
}

func (RecoveryBeaconConfigSet) Topic() common.Hash {
	return common.HexToHash("0x1591690b8638f5fb2dbec82ac741805ac5da8b45dc5263f4875b0496fdce4e05")
}

func (RecoveryBeaconNewTransmission) Topic() common.Hash {
	return common.HexToHash("0xfb8260fafd97df85b3771f6532a09a8af1daeac85d6938ee302237174c91a9c9")
}

func (RecoveryBeaconOwnershipTransferRequested) Topic() common.Hash {
	return common.HexToHash("0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278")
}

func (RecoveryBeaconOwnershipTransferred) Topic() common.Hash {
	return common.HexToHash("0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0")
}

func (_RecoveryBeacon *RecoveryBeacon) Address() common.Address {
	return _RecoveryBeacon.address
}

type RecoveryBeaconInterface interface {
	GetBalance(opts *bind.CallOpts, addr common.Address) (*big.Int, error)

	GetEnrollmentResponses(opts *bind.CallOpts, user common.Address) ([]RecoveryBeaconTypesEnrollmentResponse, error)

	GetLease(opts *bind.CallOpts, accountToRecover common.Address) (RecoveryBeaconTypesLease, error)

	GetMostRecentEnrollmentRequest(opts *bind.CallOpts) (RecoveryBeaconTypesEnrollmentRequest, error)

	GetRecoveredAddress(opts *bind.CallOpts, recoverer common.Address) (common.Address, error)

	GetRecovery(opts *bind.CallOpts, user common.Address) ([]byte, error)

	GetRecoveryRequests(opts *bind.CallOpts) ([]RecoveryBeaconTypesRecoveryRequest, error)

	LatestConfigDetails(opts *bind.CallOpts) (LatestConfigDetails,

		error)

	LatestConfigDigestAndEpoch(opts *bind.CallOpts) (LatestConfigDigestAndEpoch,

		error)

	LeaseIsExpired(opts *bind.CallOpts, accountToRecover common.Address) (bool, error)

	Owner(opts *bind.CallOpts) (common.Address, error)

	SKeyID(opts *bind.CallOpts) ([32]byte, error)

	SMostRecentAccountToRecover(opts *bind.CallOpts) (common.Address, error)

	SProvingKeyHash(opts *bind.CallOpts) ([32]byte, error)

	TypeAndVersion(opts *bind.CallOpts) (string, error)

	AcceptOwnership(opts *bind.TransactOpts) (*types.Transaction, error)

	Deposit(opts *bind.TransactOpts) (*types.Transaction, error)

	ExposeType(opts *bind.TransactOpts, arg0 RecoveryBeaconReportReport) (*types.Transaction, error)

	KeyGenerated(opts *bind.TransactOpts, kd KeyDataStructKeyData) (*types.Transaction, error)

	NewKeyRequested(opts *bind.TransactOpts) (*types.Transaction, error)

	PlunderLease(opts *bind.TransactOpts) (*types.Transaction, error)

	PostCipher(opts *bind.TransactOpts, user common.Address, enrollmentResponse RecoveryBeaconTypesEnrollmentResponse) (*types.Transaction, error)

	PostRecoveryRequests(opts *bind.TransactOpts, recoveryRequests []RecoveryBeaconTypesRecoveryRequest) (*types.Transaction, error)

	RequestAccountRecoveryEnrollment(opts *bind.TransactOpts, publicKeyBytes []byte) (*types.Transaction, error)

	RequestRecoveryLease(opts *bind.TransactOpts, accountToRecover common.Address) (*types.Transaction, error)

	Reset(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error)

	SetConfig(opts *bind.TransactOpts, signers []common.Address, transmitters []common.Address, f uint8, onchainConfig []byte, offchainConfigVersion uint64, offchainConfig []byte) (*types.Transaction, error)

	SetRecovery(opts *bind.TransactOpts, answer []byte) (*types.Transaction, error)

	TransferOwnership(opts *bind.TransactOpts, to common.Address) (*types.Transaction, error)

	Transmit(opts *bind.TransactOpts, reportContext [3][32]byte, report []byte, rs [][32]byte, ss [][32]byte, rawVs [32]byte) (*types.Transaction, error)

	Withdraw(opts *bind.TransactOpts, addr common.Address, amount *big.Int) (*types.Transaction, error)

	FilterConfigSet(opts *bind.FilterOpts) (*RecoveryBeaconConfigSetIterator, error)

	WatchConfigSet(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconConfigSet) (event.Subscription, error)

	ParseConfigSet(log types.Log) (*RecoveryBeaconConfigSet, error)

	FilterNewTransmission(opts *bind.FilterOpts, epochAndRound []*big.Int) (*RecoveryBeaconNewTransmissionIterator, error)

	WatchNewTransmission(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconNewTransmission, epochAndRound []*big.Int) (event.Subscription, error)

	ParseNewTransmission(log types.Log) (*RecoveryBeaconNewTransmission, error)

	FilterOwnershipTransferRequested(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*RecoveryBeaconOwnershipTransferRequestedIterator, error)

	WatchOwnershipTransferRequested(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconOwnershipTransferRequested, from []common.Address, to []common.Address) (event.Subscription, error)

	ParseOwnershipTransferRequested(log types.Log) (*RecoveryBeaconOwnershipTransferRequested, error)

	FilterOwnershipTransferred(opts *bind.FilterOpts, from []common.Address, to []common.Address) (*RecoveryBeaconOwnershipTransferredIterator, error)

	WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *RecoveryBeaconOwnershipTransferred, from []common.Address, to []common.Address) (event.Subscription, error)

	ParseOwnershipTransferred(log types.Log) (*RecoveryBeaconOwnershipTransferred, error)

	ParseLog(log types.Log) (generated.AbigenLog, error)

	Address() common.Address
}
